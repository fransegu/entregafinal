<header>
    <h1>
       Carritos
    </h1>
</header>
<h2>Contenidos:</h2>


{{#if products.length}}
    <div class="product-cards">
        {{#each products}}
        <div class="product-card">
            <h4>Titulo {{product.title}}</h4>
            <p>Descripcion {{product.description}}</p>
            <img src="{{product.thumbail}}" alt="{{product.title}}">
            <div class="botonesQuantity">
                <button class="add-to-cart-btn" data-cart-id="{{cartId}}" onclick="deleteOne('{{cartId}}','{{product._id}}', '{{product}}')">-</button>
                <p> Cantidad {{quantity}}</p>
                <button class="add-to-cart-btn" data-cart-id="{{cartId}}" onclick="addProductToCart('{{cartId}}','{{product._id}}', '{{product}}')">+</button>
            </div>
            <p>CATEGORY: {{product.category}}</p>
        </div>
        {{/each}}
        
        <button class="add-to-cart-btn" data-product-id="{{product._id}}" onclick="deleteAll('{{cartId}}')">Quitar todo del carrito</button>
        <button><a href="/api/carts/{{cartId}}/purchase">COMPRAR</a></button>

    </div>

{{else}}
    <p>No hay productos</p>
{{/if}}

{{!-- <script src="../public/functions.js"></script> --}}

<script>
    const deleteOne = async (cartId, _id) => {
    const cid = document.getElementById('cartId').value;
    const confirmResult = await Swal.fire({
        title: 'Estas seguro?',
        text: 'Estas a punto de eliminar el producto de tu carrito',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Si, eliminar',
        cancelButtonText: 'No, cancelar',
        confirmButtonColor: '#d33', 
        reverseButtons: true
    });

    if (!confirmResult.isConfirmed) {
        return; 
    }

    const url = `http://localhost:8080/api/cart/${cid}/products/${_id}`;
    const data = {
        cartId: cartId,  
        _id: _id,
    };


    try {
        const response = await fetch( url, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        });

        if (!response.ok) {
            console.error("Error en eliminar el producto del carrito", response.status, response.statusText);
            return;
        }
        Swal.fire({
            icon: 'success',
            title: 'Producto eliminado',
            text: 'El producto ha sido eliminado correctamente del carrito',
        });

        const result = await response.json();
        location.reload(true);

    } catch (error) {
        console.error("Fetch error:", error.message);
    }
};

</script>

<script>
    const deleteAll = async (cartId) => {
        const url = `http://localhost:8080/api/cart/${cartId}`;
        const data = {
            cartId: cartId,
        };

        try {
            const response = await fetch(url, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
            });

            if (!response.ok) {
                console.error("Error en eliminar:", response.status, response.statusText);
                return;
            }

            console.log("Carrito eliminado");
            const result = await response.json();
            location.reload(true);

        } catch (error) {
            console.error("Fetch error:", error.message);
        }
    };
</script>
